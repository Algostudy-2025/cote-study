class Solution {

    /*
    n: 지점의 개수
    s: 출발지점
    a: A의 도착지점
    b: B의 도착지점
    fares: 지점 사이의 택시 요금

    합승 하지 않아도 ㄱㄴ

    1.  합승하지 않고 다익스트라를 통해서 A,B 가 따로 간걸 미리 계산 - (왜 따로 계산 하려고 했냐? 다익스트라 s -> s 하면 0나오는걸 늦게 알아챔)

    2.  만약 합승을 한다면?
        2-1. 일단 한명 데려다 주고, 나머지 한명이 거기부터 혼자 가는 방법
        2-2. 어느 중간 지점까지 같이 합승해서 가고, 중간부터는 각각 나눠서 다시 본인의 집으로 가는 방법
        근데 2-1, 2-2는 생각하다보니까 어느 중간 지점이 그냥 데려다 주는 case라고 생각하면 로직을 분리할 필요 없음

    */


    public int solution(int n, int s, int a, int b, int[][] fares) {
        /*
         근데 나는 어떻게 풀려고 했냐?

        1. 시작 지점에서 다익스트라를 한번 돌려 그러면 각각 A,B 따로 갈때의 값이 나옴
        2. 이제 그 정보와 + N번 노드로 가서 다시 그 노드에서 다익스트라를 돌리고 나온 값이 작은 경로로 가는 방법으로 하려고 했다
        3. 근데 그랬을 때의 문제는 다익스트라를 노드의 개수만큼 돌려야한다 (시간은 오래걸려도 일단 답은 나오긴함)
        4. 그래서 고민을 하다가 시간을 한시간 반정도 태워서 못풀겠다 싶었다
        5. 반대로 간다는걸 생각을 해봤다가 뇌가 녹아서 그대로 활용을 못했다 ㅠ
         */
        return answer;
    }
}